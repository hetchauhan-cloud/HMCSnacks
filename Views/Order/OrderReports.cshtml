@model HMCSnacks.Models.OrderReportFilterViewModel

@{
    ViewData["Title"] = "Order Reports";
    var page = ViewBag.CurrentPage ?? 1;
    var totalPages = ViewBag.TotalPages ?? 1;
    bool isAdmin = ViewBag.IsAdmin ?? false;
    int sr = ((int)page - 1) * 5 + 1;
}

<h2 class="mb-3">Order Reports</h2>

<!-- 🔍 Filters -->
<form method="get" class="row g-3 mb-4">
    <div class="col-md-3">
        <label class="form-label">From Date</label>
        <input type="date" name="FromDate" class="form-control" value="@Model.FromDate?.ToString("yyyy-MM-dd")" />
    </div>

    <div class="col-md-3">
        <label class="form-label">To Date</label>
        <input type="date" name="ToDate" class="form-control" value="@Model.ToDate?.ToString("yyyy-MM-dd")" />
    </div>

    <div class="col-md-3">
        <label class="form-label">Status</label>
        <select name="Status" class="form-select">
            <option value="">-- All --</option>
            <option value="Pending" selected="@(Model.Status == "Pending")">Pending</option>
            <option value="Approved" selected="@(Model.Status == "Approved")">Approved</option>
            <option value="Rejected" selected="@(Model.Status == "Rejected")">Rejected</option>
            <option value="Cancelled" selected="@(Model.Status == "Cancelled")">Cancelled</option>
        </select>
    </div>

    @if (isAdmin)
    {
        <div class="col-md-3">
            <label class="form-label">Customer Name</label>
            <input type="text" name="CustomerName" class="form-control" value="@Model.CustomerName" />
        </div>
    }

    <div class="col-md-3 align-self-end">
        <button type="submit" class="btn btn-primary">Search</button>
        <a href="@Url.Action("OrderReports", "Order")" class="btn btn-secondary ms-2">Reset</a>
    </div>
</form>

@if (!Model.Orders.Any())
{
    <div class="alert alert-info">No orders found.</div>
}
else
{
    <table class="table table-bordered table-striped">
        <thead class="table-dark">
            <tr>
                <th>Sr No</th>
                <th>Order ID</th>
                <th>Customer Name</th>
                <th>Order Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model.Orders)
            {
                var badgeClass = order.OrderStatus?.ToLower() switch
                {
                    "approved" => "bg-success text-white",
                    "rejected" => "bg-danger text-white",
                    "pending" => "bg-warning text-dark",
                    "cancelled" => "bg-secondary text-white",
                    _ => "bg-light text-dark"
                };

                <tr>
                    <td>@sr</td>
                    <td>@order.Id</td>
                    <td>@order.Name</td>
                    <td>@order.OrderDate.ToString("dd MMM yyyy hh:mm tt")</td>
                    <td>
                        <span class="badge @badgeClass px-3 py-2 rounded-pill" style="font-size: 0.9rem;">
                            @order.OrderStatus
                            @if (order.OrderStatus?.ToLower() == "cancelled")
                            {
                                if (order.IsCancelledByAdmin)
                                {
                                    <text> (By HMC)</text>
                                }
                                else if (order.IsCancelledByCustomer)
                                {
                                    <text> (By Customer)</text>
                                }
                            }
                        </span>
                    </td>
                    <td>
                        <a href="@Url.Action("ViewOrderDetails", "Order", new { id = order.Id })" class="btn btn-sm btn-primary">
                            View Details
                        </a>

                        @if (order.OrderStatus?.ToLower() == "pending")
                        {
                            <button class="btn btn-sm btn-warning ms-2"
                                    onclick="confirmAction('@Url.Action("CancelOrder", "Order", new { id = order.Id })', 'cancel')">
                                Cancel Order
                            </button>
                        }
                        else if (isAdmin && (order.OrderStatus?.ToLower() == "rejected" || order.OrderStatus?.ToLower() == "completed"))
                        {
                            <button class="btn btn-sm btn-danger ms-2"
                                    onclick="confirmAction('@Url.Action("DeleteOrder", "Order", new { id = order.Id })', 'delete')">
                                Delete Order
                            </button>
                        }
                    </td>
                </tr>
                sr++;
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == page ? "active" : "")">
                    <a class="page-link"
                       href="@Url.Action("OrderReports", new {
                           page = i,
                           FromDate = Model.FromDate?.ToString("yyyy-MM-dd"),
                           ToDate = Model.ToDate?.ToString("yyyy-MM-dd"),
                           Status = Model.Status,
                           CustomerName = Model.CustomerName
                       })">
                        @i
                    </a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts {
    <script>
        function confirmAction(url, type) {
            const message = type === 'cancel'
                ? 'Are you sure you want to cancel this order?'
                : 'Are you sure you want to delete this order?';

            if (confirm(message)) {
                window.location.href = url;
            }
        }
    </script>
}
